{"version":3,"file":"gist.stories-197d9c32.js","sources":["../../src/lib/gist/Gist.tsx"],"sourcesContent":["type GitHubGistProps = {\n  id: string;\n  file?: string;\n  iframeStyle?: string;\n  style?: React.CSSProperties;\n};\n\nconst defaultStyle = '<style>*{font-size:12px;}</style>';\n\nexport function GitHubGist({ id, file, iframeStyle = defaultStyle }: GitHubGistProps) {\n  const fileArg = `?file=${file}`;\n  const gistURL = `https://gist.github.com/${id}.js${file ? fileArg : ''}`;\n  const iframeId = file ? `gist-${id}-${file}` : `gist-${id}`;\n  const iframeHtml = `\n<html>\n  <head>\n    <base target=\"_parent\">\n    <style>\n      body {\n        margin: 0;\n      }\n      ${iframeStyle}\n    </style>\n  </head>\n  <body  >\n    <script type=\"text/javascript\" src=\"${gistURL}\"></script>\n    <script>\n      const observer = new ResizeObserver(entries => {\n        // HTML height may not be the same as body height, so we use the parentElement's height\n        // HTML real height may be float, but clientHeight is int, so we use getBoundingClientRect to get the real height\n        var htmlHeight = entries[0].target.parentElement.getBoundingClientRect().height;\n        parent.document.getElementById('${iframeId}').style.height = htmlHeight+ 'px';\n      });\n      observer.observe(document.body);\n    </script>\n  </body>\n</html>`;\n\n  return <iframe width=\"100%\" id={iframeId} srcDoc={iframeHtml} />;\n}\n"],"names":["defaultStyle","GitHubGist","id","file","iframeStyle","fileArg","gistURL","iframeId","iframeHtml","jsx"],"mappings":"iHAOA,MAAAA,EAAA,oCAEO,SAAAC,EAAA,CAAA,GAAAC,EAAA,KAAAC,EAAA,YAAAC,EAAAJ,CAAA,EAAA,CACL,MAAAK,EAAA,SAAAF,IACAG,EAAA,2BAAAJ,OAAAC,EAAAE,EAAA,KACAE,EAAAJ,EAAA,QAAAD,KAAAC,IAAA,QAAAD,IACAM,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmBJ;AAAA;AAAA;AAAA;AAAA,0CAQbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAIkCC;AAAA;AAAA;AAAA;AAAA;AAAA,SAaxC,OAAAE,EAAA,IAAA,SAAA,CAAA,MAAA,OAAA,GAAAF,EAAA,OAAAC,CAAA,CAAA,CACF;;;;;;;;;"}